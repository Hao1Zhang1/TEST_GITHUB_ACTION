name: Extract Issue Info

on:
  issues:
    types:
      - closed

jobs:
  extract-issue-info:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: |
          pip install requests

      - name: Clone target Repo
        env:
          TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN  }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          

          # Clone the target repository
          cd ..
          pwd
          git config --global user.name "Hao1Zhang1"
          git config --global user.email "hao.zhang@jonesradiology.com.au"
          git clone https://Hao1Zhang1:${TARGET_REPO_TOKEN}@github.com/Hao1Zhang1/TEST_GITHUB_ACTION_FILE_STORING.git file_location_repo
          cd file_location_repo
          pwd

          #
          FILENAME="${{ github.event.issue.title }}_${{ github.event.issue.number }}.txt"
          echo "Issue Title: ${{ github.event.issue.title }}" > $FILENAME
          echo "Issue Number: ${{ github.event.issue.number }}" >> $FILENAME
          echo "Closed By: ${{ github.event.sender.login }}" >> $FILENAME
          echo "Closed At: ${{ github.event.issue.closed_at }}" >> $FILENAME
          echo "Labels: ${{ join(github.event.issue.labels.*.name, ', ') }}" >> $FILENAME
          echo "Assignees: ${{ join(github.event.issue.assignees.*.login, ', ') }}" >> $FILENAME
          echo "Issue Body:" >> $FILENAME
          echo "${{ github.event.issue.body }}"  >> $FILENAME

          # Fetch and print issue comments
          comments_url="${{ github.event.issue.comments_url }}"
          comments=$(curl -sS -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$comments_url")
          for comment in $(echo "$comments" | jq -r '.[].body'); do
            echo "Comment: $comment" >> $FILENAME
          done

          git add $FILENAME
          echo "added"
          git commit -m "Updated issue_info.txt from source repo"
          echo "committed"
          git push https://Hao1Zhang1:${TARGET_REPO_TOKEN}@github.com/Hao1Zhang1/TEST_GITHUB_ACTION_FILE_STORING.git
          echo "pushed"
      
      # - name: Create JSON File
      #   run: |
          

      # - name: Push to Target Repository
      #   env:
      #     TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN  }}
      #   run: |
      #     # Commit and push to the target repository
      #     git config --global user.name "Hao1Zhang1"
      #     git config --global user.email "hao.zhang@jonesradiology.com.au"
      #     cd ..
      #     cd file_location_repo
      #     pwd
      #     git add issue_info.json
      #     git commit -m "Add issue_info.json from source repo"
      #     git push

